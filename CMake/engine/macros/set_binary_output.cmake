
macro(set_binary_output BINARY_OUTPUT_VARIABLE )

	UNSET(BINARY_OUTPUT_VARIABLE)

	SET(PATH_TO_OPIFEX_BINARIES "${OPIFEX_PROJECT_BINARY_DIR}/Binaries")

	if(OPIFEX_BINARIES)
		SET(PATH_TO_OPIFEX_BINARIES ${OPIFEX_BINARIES})
		message(STATUS "SETTING BINARY OUTPUT as Application")
	endif()

	if(${OPIFEX_OPTION_RELEASE})
		SET(BINARY_RELEASE_MODE "release")
	else()
		SET(BINARY_RELEASE_MODE "debug")
	endif()

	if( "${OPIFEX_OS}" STREQUAL "${OPIFEX_ANDROID}" )

	else()
		populate_binary_directory()
		SET(COPY_BINARY_RELATIVE_DIRECTORY "/${LIBRARY_NAME}/")
		if(${OPIFEX_OPTION_SHARED})
			SET(COPY_BINARY_LIBRARY "lib${LIBRARY_NAME}.dylib")
		else()
			SET(COPY_BINARY_LIBRARY "lib${LIBRARY_NAME}.a")
		endif()

		if("${OPIFEX_OS}" STREQUAL "OPIFEX_WIN32" OR "${OPIFEX_OS}" STREQUAL "OPIFEX_WIN64")
			if(${OPIFEX_OPTION_RELEASE})
				SET(COPY_BINARY_RELATIVE_DIRECTORY "/${LIBRARY_NAME}/Release/")
			else()
				SET(COPY_BINARY_RELATIVE_DIRECTORY "/${LIBRARY_NAME}/Debug/")
			endif()
			SET(COPY_BINARY_LIBRARY "${LIBRARY_NAME}.lib")
		endif()

		SET(${BINARY_OUTPUT_VARIABLE} "${PATH_TO_OPIFEX_BINARIES}/${BINARY_TARGET_DIRECTORY}/${BINARY_RELEASE_MODE}")
		message(STATUS "OUTPUT BINARY DIRECTORY: ${${BINARY_OUTPUT_VARIABLE}}")
	endif()

endmacro(set_binary_output)
