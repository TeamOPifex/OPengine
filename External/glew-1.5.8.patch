7948,7952c7948,7951
< * is not sufficient because extension names can be prefixes of
< * other extension names. Could use strtok() but the constant
< * string returned by glGetString might be in read-only memory.
< + * Use glGetStringi if available.
< */
---
>  * is not sufficient because extension names can be prefixes of
>  * other extension names. Could use strtok() but the constant
>  * string returned by glGetString might be in read-only memory.
>  */
7954,7978c7953,7966
< {
< 	GLubyte* p;
< 	GLubyte* end;
< 	GLuint len = _glewStrLen((const GLubyte*)name);
< 	if (glGetStringi){
< 		GLint i, num_extensions;
< 		glGetIntegerv (GL_NUM_EXTENSIONS, &num_extensions);
< 		for (i = 0; i < num_extensions; i++){
< 			p = (GLubyte*) glGetStringi (GL_EXTENSIONS, i);
< 			if (0 == p) return GL_FALSE;
< 			if (len == _glewStrLen (p)){
< 				if (_glewStrSame ((const GLubyte*)name, p, len)) return GL_TRUE;
< 			}
< 		}
< 	}else{
< 		p = (GLubyte*)glGetString(GL_EXTENSIONS);
< 		if (0 == p) return GL_FALSE;
< 		end = p + _glewStrLen(p);
< 		while (p < end){
< 			GLuint n = _glewStrCLen(p, ' ');
< 			if (len == n && _glewStrSame((const GLubyte*)name, p, n)) return GL_TRUE;
< 			p += n+1;
< 		}
< 	}
< 	return GL_FALSE;
---
> {    
>   GLubyte* p;
>   GLubyte* end;
>   GLuint len = _glewStrLen((const GLubyte*)name);
>   p = (GLubyte*)glGetString(GL_EXTENSIONS);
>   if (0 == p) return GL_FALSE;
>   end = p + _glewStrLen(p);
>   while (p < end)
>   {
>     GLuint n = _glewStrCLen(p, ' ');
>     if (len == n && _glewStrSame((const GLubyte*)name, p, n)) return GL_TRUE;
>     p += n+1;
>   }
>   return GL_FALSE;
7979a7968
> 
